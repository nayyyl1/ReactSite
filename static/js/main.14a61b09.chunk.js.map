{"version":3,"sources":["image/me.png","Component/Works.js","Component/Background.js","Component/Home.js","Component/Navheader.js","Component/Sidebar.js","Component/SidebarContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Works","colours","P5","setup","draw","mouseClicked","p5","Background","createCanvas","window","innerWidth","innerHeight","frameRate","background","rectMode","CENTER","push","fill","strokeWeight","translate","mouseX","mouseY","rotate","radians","frameCount","rect","pop","Home","className","Navheader","Sidebar","props","state","expand","href","React","Component","SidebarContainer","shout","setState","renderSidebar","style","fullSidebar","clickExpand","expandForm","prevState","console","log","renderButton","onClick","renderThis","bind","addEventListener","this","removeEventListener","backgroundColor","width","height","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14a61b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.8eb51ef2.png\";","import React from \"react\";\nimport meme from \"../image/me.png\";\n\nfunction Works() {\n  return (\n    <div className=\"Work\">\n      <div className=\"List\" id=\"code\">\n        <p className=\"Text-1\">CODE</p>\n        <hr></hr>\n        <div className=\"List-sub\">\n          <p className=\"Text-2\">WEB</p>\n          <div className=\"List-work\">\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"List-sub\">\n          <p className=\"Text-2\">OTHERS</p>\n          <div className=\"List-work\">\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n            <div className=\"Work-container\">\n              <img src={meme}></img>\n              <p>Name1</p>\n              <p>Description</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Works;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport P5Wrapper from \"react-p5-wrapper\";\nvar colours = \"orange\";\nconst P5 = ({ setup, draw, mouseClicked }) => {\n  const sketch = p5 => {\n    p5.setup = () => setup(p5);\n    p5.draw = () => draw(p5);\n    p5.mouseClicked = function() {\n      if (colours == \"orange\") colours = \"green\";\n      else colours = \"orange\";\n    };\n  };\n  new p5(sketch);\n\n  return <></>;\n};\n\nfunction Background() {\n  function setup(p5) {\n    p5.createCanvas(window.innerWidth, window.innerHeight);\n    p5.frameRate(30);\n    p5.background(255);\n    p5.rectMode(p5.CENTER);\n  }\n\n  function draw(p5) {\n    p5.background(255);\n    p5.push();\n    p5.fill(colours);\n    p5.strokeWeight(0);\n    p5.translate(p5.mouseX, p5.mouseY);\n    p5.rotate(p5.radians(p5.frameCount));\n    p5.rect(0, 0, 50, 50);\n    p5.pop();\n  }\n\n  return (\n    <div>\n      <P5 setup={setup} draw={draw} />\n    </div>\n  );\n}\n\nexport default Background;\n","import React from \"react\";\nimport Works from \"./Works\";\nimport Background from \"./Background\";\n\nfunction Home() {\n  return (\n    <div className=\"Main\">\n      <div className=\"Intro\">\n        <div>\n          <div className=\"Row Text-4\">\n            <p>HI</p>\n            <p className=\"Gantan\">!</p>\n          </div>\n          <div className=\"Row Text-4\">\n            <p>THIS IS NAY</p>\n            <p className=\"Gantan\">!</p>\n          </div>\n          <div className=\"Row Text-4\">\n            <p>( ◔ ڼ ◔ )</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Navheader() {\n  return (\n    <div className=\"Navdiv\">\n      <div className=\"Navline\"></div>\n      <div className=\"Navline\"></div>\n      <div className=\"Navline\"></div>\n    </div>\n  );\n}\n\nexport default Navheader;\n","import React, { useEffect, useState } from \"react\";\nimport Navheader from \"./Navheader\";\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: \"true\"\n    };\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"Sidebar\">\n          <p className=\"Text-1 Name\">KEXIN ZHENG</p>\n          <div className=\"Menu\">\n            <p className=\"Text-2\">ABOUT</p>\n            <hr></hr>\n            <div className=\"Menu-group\">\n              <a href=\"#code\" className=\"Text-2\">\n                CODE\n              </a>\n              <div className=\"Menu-2\">\n                <a href=\"#\" className=\"Text-3\">\n                  WEB\n                </a>\n                <a href=\"#\" className=\"Text-3\">\n                  OTHER\n                </a>\n              </div>\n            </div>\n            <div className=\"Menu-group\">\n              <a href=\"#\" className=\"Text-2\">\n                VISUAL\n              </a>\n              <div className=\"Menu-2\">\n                <a href=\"#\" className=\"Text-3\">\n                  GRAPHIC\n                </a>\n                <a href=\"#\" className=\"Text-3\">\n                  PHOTO/VIDEO\n                </a>\n                <a href=\"#\" className=\"Text-3\">\n                  INSTALLATION\n                </a>\n                <a href=\"#\" className=\"Text-3\">\n                  DRAWING\n                </a>\n              </div>\n              <div className=\"Menu-group\">\n                <a href=\"#\" className=\"Text-2\">\n                  RESUME\n                </a>\n              </div>\n              <div className=\"Menu-group\">\n                <a href=\"https://github.com/nayyyl1\" className=\"Text-2\">\n                  GITHUB\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer\">\n            <p className=\"Text-footer\">Created by Kexin ZHENG @ 2020</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Navheader from \"./Navheader\";\n\nclass SidebarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: \"false\"\n    };\n    this.shout = this.shout.bind(this);\n  }\n\n  shout = () => {\n    if (window.innerWidth > 1000) {\n      this.setState({\n        expand: \"true\"\n      });\n    } else if (this.state.expand) {\n      this.setState({\n        expand: \"false\"\n      });\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.shout);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.shout);\n  }\n\n  renderSidebar = () => {\n    if (window.innerWidth < 1000) {\n      return (\n        <div style={fullSidebar}>\n          <Sidebar></Sidebar>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Sidebar></Sidebar>\n        </div>\n      );\n    }\n  };\n\n  clickExpand = () => {\n    const expandForm = this.state.expand;\n    this.setState(prevState => ({\n      expand: !prevState.expand\n    }));\n    console.log(expandForm);\n  };\n\n  renderButton = () => {\n    return (\n      <div className=\"Navheader\" onClick={this.clickExpand}>\n        <Navheader></Navheader>\n      </div>\n    );\n  };\n\n  renderThis = () => {\n    if (window.innerWidth > 1000) return this.renderSidebar();\n    else {\n      if (!this.state.expand) {\n        return (\n          <div>\n            {this.renderSidebar()}\n            {this.renderButton()}\n          </div>\n        );\n      } else {\n        return <div>{this.renderButton()}</div>;\n      }\n    }\n  };\n\n  render() {\n    return <div>{this.renderThis()}</div>;\n  }\n}\n\nvar fullSidebar = {\n  backgroundColor: \"white\",\n  width: window.innerWidth,\n  height: window.innerHeight\n};\n\nexport default SidebarContainer;\n","import React from \"react\";\nimport logo from \"./image/me.png\";\nimport \"./css/App.css\";\nimport Home from \"./Component/Home\";\nimport Background from \"./Component/Background\";\nimport SidebarContainer from \"./Component/SidebarContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background></Background>\n      <SidebarContainer></SidebarContainer>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}