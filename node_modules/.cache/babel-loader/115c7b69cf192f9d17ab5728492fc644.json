{"ast":null,"code":"var _jsxFileName = \"/Users/zhengkexin/Documents/design/debug/my-app/src/Component/SidebarContainer.js\";\nimport React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Navheader from \"./Navheader\";\n\nclass SidebarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shout = () => {\n      if (window.innerWidth > 1000) {\n        this.setState({\n          expand: \"true\"\n        });\n      } else if (this.state.expand) {\n        this.setState({\n          expand: \"false\"\n        });\n      }\n    };\n\n    this.renderSidebar = () => {\n      if (window.innerWidth < 1000) {\n        return React.createElement(\"div\", {\n          style: fullSidebar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.clickExpand = () => {\n      const expandForm = this.state.expand;\n      this.setState(prevState => ({\n        expand: !prevState.expand\n      }));\n      console.log(expandForm);\n    };\n\n    this.renderButton = () => {\n      return React.createElement(\"div\", {\n        className: \"Navheader\",\n        onClick: this.clickExpand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Navheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    };\n\n    this.renderThis = () => {\n      if (window.innerWidth > 1000) return this.renderSidebar();else {\n        if (!this.state.expand) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, this.renderSidebar(), this.renderButton());\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, this.renderButton());\n        }\n      }\n    };\n\n    this.state = {\n      expand: \"false\"\n    };\n    this.shout = this.shout.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.shout);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.shout);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderThis());\n  }\n\n}\n\nvar fullSidebar = {\n  backgroundColor: \"white\",\n  width: window.innerWidth,\n  height: window.innerHeight\n};\nexport default SidebarContainer;","map":{"version":3,"sources":["/Users/zhengkexin/Documents/design/debug/my-app/src/Component/SidebarContainer.js"],"names":["React","Sidebar","Navheader","SidebarContainer","Component","constructor","props","shout","window","innerWidth","setState","expand","state","renderSidebar","fullSidebar","clickExpand","expandForm","prevState","console","log","renderButton","renderThis","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","backgroundColor","width","height","innerHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Navheader from \"./Navheader\";\n\nclass SidebarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: \"false\"\n    };\n    this.shout = this.shout.bind(this);\n  }\n\n  shout = () => {\n    if (window.innerWidth > 1000) {\n      this.setState({\n        expand: \"true\"\n      });\n    } else if (this.state.expand) {\n      this.setState({\n        expand: \"false\"\n      });\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.shout);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.shout);\n  }\n\n  renderSidebar = () => {\n    if (window.innerWidth < 1000) {\n      return (\n        <div style={fullSidebar}>\n          <Sidebar></Sidebar>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Sidebar></Sidebar>\n        </div>\n      );\n    }\n  };\n\n  clickExpand = () => {\n    const expandForm = this.state.expand;\n    this.setState(prevState => ({\n      expand: !prevState.expand\n    }));\n    console.log(expandForm);\n  };\n\n  renderButton = () => {\n    return (\n      <div className=\"Navheader\" onClick={this.clickExpand}>\n        <Navheader></Navheader>\n      </div>\n    );\n  };\n\n  renderThis = () => {\n    if (window.innerWidth > 1000) return this.renderSidebar();\n    else {\n      if (!this.state.expand) {\n        return (\n          <div>\n            {this.renderSidebar()}\n            {this.renderButton()}\n          </div>\n        );\n      } else {\n        return <div>{this.renderButton()}</div>;\n      }\n    }\n  };\n\n  render() {\n    return <div>{this.renderThis()}</div>;\n  }\n}\n\nvar fullSidebar = {\n  backgroundColor: \"white\",\n  width: window.innerWidth,\n  height: window.innerHeight\n};\n\nexport default SidebarContainer;\n"]},"metadata":{},"sourceType":"module"}